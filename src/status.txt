func display_status_bar() {
  var mode_status string
  var copy_status string
  var undo_status string
  if mode > 0 { mode_status = " EDIT: "
  } else { mode_status = " VIEW: " }
  filename_length := len(source_file)
  if filename_length > 24 { filename_length = 24 }
  file_status := source_file[:filename_length] + " - " + strconv.Itoa(len(text_buffer)) + " lines"
  if modified { file_status += " modified "
  } else { file_status += " saved" }
  cursor_status := " Row " + strconv.Itoa(current_row+1) + ", Col " + strconv.Itoa(current_col+1) + " "
  if len(copy_buffer) > 0 { copy_status = " [Copy]" }
  if len(undo_buffer) > 0 { undo_status = " [Undo]" }
  used_space := len(mode_status) + len(file_status) + len(cursor_status) + len(copy_status) + len (undo_status)
  spaces := strings.Repeat(" ", COLS - used_space)
  message := mode_status + file_status + copy_status + undo_status + spaces + cursor_status
  print_message(0, ROWS, termbox.ColorBlack, termbox.ColorWhite, message)
}
